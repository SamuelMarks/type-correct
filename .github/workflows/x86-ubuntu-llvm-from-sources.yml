name: x86-Ubuntu-llvm-from-sources

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: |
          sudo apt install -y \
              cmake \
              ninja-build \
              manpages-dev \
              software-properties-common
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt install -y \
              gcc-11 \
              g++-11 \
              libc-dev
          sudo update-alternatives \
              --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 \
              --slave /usr/bin/g++ g++ /usr/bin/g++-11 \
              --slave /usr/bin/gcov gcov /usr/bin/gcov-11
          gcc --version ; g++ --version ; cmake --version ; /usr/bin/ld --version ; /usr/bin/x86_64-linux-gnu-ld.gold --version
      - name: Clone llvm-project
        run: |
          git clone --depth '1' --single-branch --branch 'release/13.x' \
              'https://github.com/llvm/llvm-project'
      - name: Make ld.gold the default linker
        run: |
          # This a quick and easy hack. Not something I would use on my
          # production machine.
          sudo rm '/usr/bin/ld'
          sudo ln -s '/usr/bin/x86_64-linux-gnu-ld.gold' '/usr/bin/ld'
      - name: Build LLVM & Clang
        run: |
          pushd 'llvm-project'
          mkdir 'build' && pushd "$_"
          cmake -G 'Ninja' \
            -DCMAKE_BUILD_TYPE='Release' \
            -DLLVM_ENABLE_PROJECTS='clang;libcxx;libcxxabi' \
            -DLLVM_TARGETS_TO_BUILD='X86' \
            -DLLVM_OPTIMIZED_TABLEGEN='ON' \
            -DLLVM_INCLUDE_TESTS='OFF' \
            ../llvm
          cmake --build .
          popd
          popd
      - name: Build type-correct + run tests
        run: |
          mkdir 'build' && pushd "$_"
          # Test with Clang_DIR
          cmake -DClang_DIR="$GITHUB_WORKSPACE/llvm-project/build/lib/cmake/clang/" ../
          cmake --build .
          ctest -VV -CRelease . || [ -f "Testing/Temporary/LastTest.log" ] && Testing/Temporary/LastTest.log
          popd
