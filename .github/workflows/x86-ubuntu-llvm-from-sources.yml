name: x86-Ubuntu-llvm-from-sources

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Download Ninja
        run: |
          git clone 'https://github.com/ninja-build/ninja'
          pushd ninja
          ./configure.py --bootstrap
          popd
      - name: Add Ninja to $PATH
        run: |
          echo "${GITHUB_WORKSPACE}/ninja" >> "$GITHUB_PATH"
      - name: Clone llvm-project
        run: |
          git clone --depth '1' --single-branch --branch 'release/13.x' 'https://github.com/llvm/llvm-project'
      - name: Make ld.gold the default linker
        run: |
          # This a quick and easy hack. Not something I would use on my
          # production machine.
          sudo rm '/usr/bin/ld'
          sudo ln -s '/usr/bin/x86_64-linux-gnu-ld.gold' '/usr/bin/ld'
      - name: Build LLVM & Clang
        run: |
          cd 'llvm-project'
          git checkout 'release/12.x'
          mkdir 'build' && cd "$_"
          cmake -G Ninja -D CMAKE_MAKE_PROGRAM=$GITHUB_WORKSPACE/ninja \
            -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS="clang;libcxx;libcxxabi" \
            -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_OPTIMIZED_TABLEGEN=ON \
            ../llvm
          ninja
      - name: Build type-correct + run tests
        run: |
          mkdir 'build' && cd "$_"
          # Test with Clang_DIR
          cmake -DClang_DIR="$GITHUB_WORKSPACE/llvm-project/build/lib/cmake/clang/" ../
          cmake --build .
          ctest .
